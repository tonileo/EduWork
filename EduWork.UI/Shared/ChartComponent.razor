@using Common.DTO.ProjectTime
@using EduWork.UI.Interop
@using System.Text.Json

@inject IJSRuntime JsRuntime

<canvas id="myChart"></canvas>

<style>
    #myChart {
        width: 300px !important;
        height: 300px !important;
    }
</style>

@code {
    [Parameter]
    public List<ProjectTimeSumDto> projectTimeSumDto { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            try
            {
                var chartData = new
                {
                    labels = projectTimeSumDto.Select(p => p.TitleProject).ToArray(),
                    datasets = new[]
                    {
                        new
                        {
                            label = "%",
                            data = projectTimeSumDto.Select(p => p.PercentageTimeSpent).ToArray(),
                        }
                    }
                };

                await ChartJs.CreateChartAsync(JsRuntime, "myChart", "doughnut", chartData);
            }
            catch (Exception ex)
            {
                Console.Error.WriteLine($"Error creating chart: {ex.Message}");
            }
        }
    }
}

