@page "/profile/{username}"
@using Common.DTO.Profile
@using Microsoft.AspNetCore.Authorization

@inject HttpClient Http

@attribute [Authorize]

@if (userProfile == null)
{
    <p><em>@LABEL_LOADING</em></p>
}
else
{
    <div>
        <div class="card m-1">
            <div class="card-header">
                <div class="d-flex flex-row align-items-center">
                    <span id="personIcon" class="bi bi-person-circle" aria-hidden="true"></span>
                    <div class="d-flex flex-column justify-content-center">
                        <p id="usernameLabel">@userProfile.Username</p>
                        <p><strong>Uloga: </strong> @userProfile.AppRoleTitle</p>
                        <p><strong>@LABEL_EMAIL</strong> @userProfile.Email</p>
                    </div>
                </div>
            </div>
        </div>

        <div class="grid-containers">
            <div class="grid-item">
                <div class="card m-1">
                    <div class="card-header">
                        <p><strong>@HEADER_CURRENT_PROJECT</strong></p>
                    </div>
                    <div class="card-body">
                        <p>@userProfile.Project?.Title - @userProfile.Project?.Role</p>
                    </div>
                </div>

                <div class="card m-1">

                    <div class="card-header d-flex justify-content-between align-items-center">
                        <p><strong>@HEADER_USER_STATS</strong></p>
                        <InputSelect @bind-Value="selectedDate" @oninput="HandleMonthSelect">
                            <option value=@SELECTED_THIS_MONTH_VALUE selected>@LABEL_THIS_MONTH</option>
                            <option value=@SELECTED_LAST_MONTH_VALUE>@LABEL_LAST_MONTH</option>
                        </InputSelect>
                    </div>

                    <div class="card-body d-flex justify-content-between align-items-center">
                        <div>
                            <span id="smallicon" class="bi bi-clock" aria-hidden="true"></span>
                            <div>
                                <strong><span>@myProfileStats?.SumHoursSpent</span> h : <span>@myProfileStats?.SumMinutesSpent</span> min</strong>
                                <p class="userStatP">@LABEL_TOTAL_HOURS</p>
                            </div>
                        </div>

                        <div>
                            <span id="smallicon" class="bi bi-kanban" aria-hidden="true"></span>
                            <strong><span>@myProfileStats?.CountProjects</span></strong>
                            <p class="userStatP">@LABEL_TOTAL_PROJECTS</p>
                        </div>
                        <div>@LABEL_FIND_OUT_MORE</div>

                    </div>

                </div>
            </div>

            <div class="grid-item">
                <div class="card m-1">

                    <div class="card-header">
                        <p><strong>@HEADER_ANNUAL_LEAVE</strong></p>
                    </div>

                    <div class="card-body">
                        @if (userProfile.AnnualLeave != null && userProfile.AnnualLeaveRecords != null)
                        {
                            <div class="grid-container">
                                <div>
                                    <p id="annualDayP">@userProfile.AnnualLeave.TotalLeaveDays</p>
                                    <p>@LABEL_TOTAL_AVAILABLE</p>
                                </div>

                                <div>
                                    <p id="annualDayP">@userProfile.AnnualLeave.PlannedLeaveDays</p>
                                    <p>@LABEL_DAYS_PLANNED</p>
                                </div>

                                <div>
                                <p id="annualDayP">@userProfile.AnnualLeave.LeftLeaveDaysLastYear</p>
                                    <p>@LABEL_DAYS_LEFT_FROM_LAST_YEAR</p>
                                </div>

                                <div id="annualLeaveDiv">
                                    <p id="annualLeaveP">@userProfile.AnnualLeave.LeftLeaveDays</p>
                                    <p>@LABEL_DAYS_LEFT</p>
                                </div>

                            </div>
                        }
                        else
                        {
                            <p><em>@LABEL_NO_DATA</em></p>
                        }
                    </div>

                    <div class="card-footer">
                        <p><strong>@HEADER_USED_DAYS</strong></p>

                        @if (userProfile.AnnualLeaveRecords != null)
                        {
                            @foreach (var record in userProfile.AnnualLeaveRecords)
                            {
                                <div id="annualDayDiv">@record.StartDate - @record.EndDate</div>
                            }
                        }

                        @if (buttonAnnulLeave){
                            <div id="annualDayDiv">
                                <InputDate @bind-Value="profileAnnualRequestDto.StartDate" />
                                -
                                <InputDate @bind-Value="profileAnnualRequestDto.EndDate" />

                                <InputTextArea @bind-Value="profileAnnualRequestDto.Comment" placeholder="Komentar..." rows="1" id="inputComment" />

                                <button class="btn btn-success" @onclick="Submit"><i class="bi bi-check-lg fs-6"></i></button>
                                <button class="btn btn-danger" @onclick="Cancel"><i class="bi bi-x-lg fs-6"></i></button>
                            </div>
                        }

                        <div>
                            <button class="btn btn-info" @onclick="AddAnnulLeave"><i class="bi bi-plus-lg fs-6"></i></button>
                        </div>

                    </div>

                </div>

                <div class="card m-1">
                    <div class="card-header">
                        <p><strong>@HEADER_SICK_LEAVE</strong></p>
                    </div>
                    <div class="card-body">
                        @if (userProfile.SickLeaveRecords != null)
                        {
                            <div id="sickLeaveDiv">
                                <p>@LABEL_SUM_SICK_DAYS_YEARLY</p>
                                <p id="sickDaysP">@userProfile.SickLeaveRecords.Sum(record => record.TotalSickDays)</p>
                            </div>
                        }
                        else
                        {
                            <p><em>@LABEL_NO_DATA</em></p>
                        }
                    </div>
                    <div class="card-footer">
                        <p><strong>@HEADER_SICK_DAYS</strong></p>
                        @if (userProfile.SickLeaveRecords != null)
                        {
                            <div>
                                @foreach (var record in userProfile.SickLeaveRecords)
                                {
                                    <div id="annualDayDiv">@record.StartDate - @record.EndDate</div>
                                }
                            </div>

                            @if (buttonSickDay)
                            {
                                <div id="annualDayDiv">
                                    <InputDate @bind-Value="profileAnnualRequestDto.StartDate" />
                                    -
                                    <InputDate @bind-Value="profileAnnualRequestDto.EndDate" />

                                    <InputTextArea @bind-Value="profileAnnualRequestDto.Comment" placeholder="Komentar..." rows="1" />

                                    <button class="btn btn-success" @onclick="Submit"><i class="bi bi-check-lg fs-6"></i></button>
                                    <button class="btn btn-danger" @onclick="Cancel"><i class="bi bi-x-lg fs-6"></i></button>
                                </div>
                            }

                            <div>
                                <button class="btn btn-info" @onclick="AddSickDay"><i class="bi bi-plus-lg fs-6"></i></button>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public string? username { get; set; }

    private MyProfileDto? userProfile;

    private MyProfileStatsDto? myProfileStats;

    private ProfileAnnualRequestDto profileAnnualRequestDto = new ProfileAnnualRequestDto();

    public string? selectedDate;

    public bool buttonAnnulLeave = false;
    public bool buttonSickDay = false;

    private const string LABEL_EMAIL = "Email: ";
    private const string HEADER_CURRENT_PROJECT = "Currently Working On";
    private const string HEADER_USER_STATS = "User Statistics";
    private const string LABEL_LAST_MONTH = "Last Month";
    private const string LABEL_THIS_MONTH = "This Month";
    private const string LABEL_TOTAL_HOURS = "Total Hours";
    private const string LABEL_TOTAL_PROJECTS = "Total Projects";
    private const string LABEL_FIND_OUT_MORE = "Find out more...";
    private const string HEADER_ANNUAL_LEAVE = "Annual Leave";
    private const string LABEL_DAYS_LEFT = "days left";
    private const string LABEL_DAYS_PLANNED = "days planned";
    private const string LABEL_DAYS_LEFT_FROM_LAST_YEAR = "days from last year";
    private const string LABEL_TOTAL_AVAILABLE = "days available this year";
    private const string HEADER_USED_DAYS = "Used Days";
    private const string HEADER_SICK_LEAVE = "Sick Leave";
    private const string LABEL_SUM_SICK_DAYS_YEARLY = "Total sick leave this year: ";
    private const string HEADER_SICK_DAYS = "Sick Days";
    private const string LABEL_LOADING = "Loading data...";
    private const string LABEL_NO_DATA = "No data...";

    private const string GET_MY_PROFILE_ENDPOINT = "api/UserProfiles/profile/";
    private const string GET_MY_PROFILE_STATS_ENDPOINT = "api/UserProfiles/stats/";
    private const string SELECTED_LAST_MONTH_VALUE = "lastMonth";
    private const string SELECTED_THIS_MONTH_VALUE = "thisMonth";

    protected override async Task OnInitializedAsync()
    {
        await LoadData("");
    }

    private async Task LoadData(string parameters)
    {
        profileAnnualRequestDto.StartDate = DateTime.Today.AddMonths(+1);
        profileAnnualRequestDto.EndDate = DateTime.Today.AddMonths(+1).AddDays(+7);

        userProfile = await Http.GetFromJsonAsync<MyProfileDto>($"{GET_MY_PROFILE_ENDPOINT}{username}");
        myProfileStats = await Http.GetFromJsonAsync<MyProfileStatsDto>($"{GET_MY_PROFILE_STATS_ENDPOINT}{username}{parameters}");

        StateHasChanged();
    }

    private async void HandleMonthSelect(ChangeEventArgs args)
    {
        if (args.Value != null)
        {
            selectedDate = args.Value.ToString();

            var parameter = "";

            if (selectedDate == SELECTED_LAST_MONTH_VALUE)
            {
                parameter = $"?{SELECTED_LAST_MONTH_VALUE}=true";
            }
            else
            {
                parameter = $"?{SELECTED_THIS_MONTH_VALUE}=true";
            }

            await LoadData(parameter);
        }
    }

    private void AddAnnulLeave()
    {
        buttonAnnulLeave = true;
        buttonSickDay = false;
    }

    private void AddSickDay()
    {
        buttonSickDay = true;
        buttonAnnulLeave = false;
    }

    private void Cancel()
    {
        profileAnnualRequestDto.StartDate = DateTime.Today.AddMonths(+1);
        profileAnnualRequestDto.EndDate = DateTime.Today.AddMonths(+1).AddDays(+7);

        buttonAnnulLeave = false;
        buttonSickDay = false;
    }

    private async Task Submit()
    {
        try
        {
            if (buttonAnnulLeave)
            {
                var request = await Http.PostAsJsonAsync($"api/UserProfiles/addAnnualLeave/{username}", profileAnnualRequestDto);
            }
            else
            {
                var request = await Http.PostAsJsonAsync($"api/UserProfiles/addSickDay/{username}", profileAnnualRequestDto);
            }

            buttonAnnulLeave = false;
            buttonSickDay = false;

            await LoadData("");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Exception: {ex.Message}");
        }
    }
}