@page "/users"
@using Common.DTO.Profile
@using EduWork.UI.Components.Profile

@inject HttpClient Http

@if (users == null)
{
    <p><em>@LABEL_LOADING</em></p>
}
else
{
    <div class="container text-center">
        <div class="d-flex flex-row justify-content-center align-items-center">
            <InputText class="m-1 w-50 form-control" @bind-Value="inputUsername" placeholder="Enter username..." @oninput="InputChanged" />

            <InputSelect id="userInputSelect" class="form-control" @bind-Value="ascending" @oninput="SelectChanged">
                <option selected value="true">@LABEL_SORT_ASC</option>
                <option value="false">@LABEL_SORT_DESC</option>
            </InputSelect>
        </div>
    </div>

    <div class="container my-4">
        <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 g-5">
            @foreach (var user in users)
            {
                <div class="col">
                    <SmallProfileComponent User=@user></SmallProfileComponent>
                </div>
            }
        </div>
    </div>
}

@code {
    private const string LABEL_LOADING = "Učitavanje podataka...";
    private const string LABEL_SORT_ASC = "Uzlazno";
    private const string LABEL_SORT_DESC = "Silazno";

    private const string ENDPOINT_GET_PROJECTS = "api/UserProfiles/projects";
    private const string ENDPOINT_GET_USER_PROFILES = "api/UserProfiles";

    private List<UserProfileDto>? users = new List<UserProfileDto>();
    private List<ProjectsProfileDto> projects = new List<ProjectsProfileDto>();

    private string? inputUsername;
    private bool? ascending = true;
    private string? parameters;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            projects = await Http.GetFromJsonAsync<List<ProjectsProfileDto>>(ENDPOINT_GET_PROJECTS);

            await LoadData();
        }
        catch (Exception e)
        {
            Console.WriteLine(e.Message);
        }
    }

    private async Task LoadData()
    {
        var sendParameter = "?username=" + inputUsername;
        var ascParameter = "&asc=" + ascending;
        parameters = sendParameter + ascParameter;

        users = await Http.GetFromJsonAsync<List<UserProfileDto>>($"{ENDPOINT_GET_USER_PROFILES}{parameters}");
        
        StateHasChanged();
    }

    private async void InputChanged(ChangeEventArgs args)
    {
        inputUsername = (args.Value).ToString();

        await LoadData();
    }

    private async void SelectChanged(ChangeEventArgs args)
    {
        ascending = Convert.ToBoolean(args.Value);

        await LoadData();
    }
}
